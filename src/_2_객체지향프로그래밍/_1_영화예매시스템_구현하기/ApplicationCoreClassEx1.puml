@startuml
skinparam class {
    BackgroundColor White
    ArrowColor Black
    BorderColor Black
}

class AmountDiscountPolicy {
    discountAmount
    getDiscountAmount(Screening screening)
}

class Customer {
    name
    id
}

class DiscountCondition {
    isSatisfiedBy(Screening screening)
}

class DiscountPolicy {
    calculateDiscountAmount(Screening screening)
    getDiscountAmount(Screening Screening)
}

class Money {
    ZERO
    amount
    wons(long amount)
    wons(double amount)
    plus(Money amount)
    minus(Money amount)
    times(double percent)
    isLessThan(Money other)
    isGreaterThanOrEqual(Money other)
    equals(Object object)
    hashCode()
    toString()
}

class Movie {
    title
    runningTime
    fee
    discountPolicy
    getFee()
    calculateMovieFee(Screening screening)
}

class NoneDiscountPolicy {
    getDiscountAmount(Screening screening)
}

class PercentDiscountPolicy {
    percent
    getDiscountAmount(Screening screening)
}

class PeriodCondition {
    dayOfWeek
    startTime
    endTime
    isSatisfiedBy(Screening screening)
}

class Reservation {
    customer
    screening
    fee
    audienceCount
}

class Screening {
    movie
    sequence
    whenScreened
    getStartTime()
    isSequence(int sequence)
    getMovieFee()
    reserve(Customer customer, int audienceCount)
    calculateFee(int audienceCount)
}

class SequenceCondition {
    sequence
    isSatisfiedBy(Screening screening)
}
hide empty members
hide empty methods

AmountDiscountPolicy ---> "discountAmount" Money
AmountDiscountPolicy ---> DiscountPolicy
PercentDiscountPolicy --> DiscountPolicy
NoneDiscountPolicy --> DiscountPolicy
DiscountPolicy *---> "conditions" DiscountCondition
Movie --> "fee" Money
Movie --> "discountPolicy" DiscountPolicy
Reservation --> "customer" Customer
Reservation --> "screening" Screening
Reservation -> "money" Money
Screening --> "movie" Movie
PeriodCondition --> DiscountCondition
SequenceCondition --> DiscountCondition

@enduml